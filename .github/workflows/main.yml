on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to Dockerhub
      uses: docker/login-action@v1.8.0
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - uses: docker/setup-buildx-action@v1
      if: ${{ !env.ACT }}
    - name: build
      if: ${{ !env.ACT }}
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: amp4e/amp4e_splunk_events_input:latest
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: "2.7.18"
    - run: docker run --rm -d -e SPLUNK_START_ARGS=--accept-license -e SPLUNK_PASSWORD=changeme -p 8000:8000 --name splunk splunk/splunk:7.3
    - run: pip install -r requirements.txt
    - name: wait for service
      run: >-
        tries=0;
        max_tries=60;
        while [[ true ]]; do
          tries=$((tries + 1));
          echo "waiting for the Splunk container to be ready... [$tries]";
          sleep 2;
          status=`docker inspect -f '{{ .State.Health.Status }}' splunk`
          look_exit=$?;
          if [[ "$status" = "healthy" ]]; then echo "Container is ready"; break; fi;
          if [[ "$tries" -ge "$max_tries" ]]; then echo "Container did not become healthy in time"; exit 1; break; fi;
        done;
    - run: python -m unittest discover
    - name: cleanup
      if: ${{ always() }}
      run: docker stop splunk && docker rm splunk